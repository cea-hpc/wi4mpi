digraph G {
    rankdir=TB;  // Orientation from top to bottom
    // rankdir=LB;  // Orientation from Rleft to right

    //
    // Classes definition:
    //
    subgraph cluster_class_Generator {
            label=<<B>Generator</B>>;
            labeljust="l";
            color=blue;
            style=rounded;
            bgcolor=lightblue;

            // Method definition: ellipse
            node [shape=ellipse, style=filled, fillcolor=orange];
            Generator_generate [label="generate"];
            Generator_generate_header [label="generate_header"];
            // Links
            Generator_generate -> Generator_generate_header;
    }
    subgraph cluster_class_OmpiHeaderGenerator {
            label=<<B>OmpiHeaderGenerator</B>>;
            labeljust="l";
            color=blue;
            style=rounded;
            bgcolor=lightblue;

            // Method definition: ellipse
            node [shape=ellipse, style=filled, fillcolor=orange];
            OmpiHeaderGenerator_generate [label="generate"];
    }
    subgraph cluster_class_HeaderGenerator {
            label=<<B>HeaderGenerator</B>>;
            labeljust="l";
            color=blue;
            style=rounded;
            bgcolor=lightblue;

            // Method definition: ellipse
            node [shape=ellipse, style=filled, fillcolor=orange];
            HeaderGenerator_generate [label="generate"];
            HeaderGenerator__generate_app_mpih [label="_generate_app_mpih"];
            HeaderGenerator__common_generate_app_mpih [label="_common_generate_app_mpih"];
//            HeaderGenerator__replace_mpi_with_rmpi [label="_replace_mpi_with_rmpi"];
            // Links
            HeaderGenerator__generate_app_mpih -> HeaderGenerator__common_generate_app_mpih;
    }

    // Module definition: rectangle
    subgraph cluster_module_textoperator {
            label=<<B>textoperator</B>>;
            labeljust="l";
            color=red;
            style=rounded;
            bgcolor=lightsalmon;

            // Method definition: ellipse
            node [shape=ellipse, style=filled, fillcolor=orange];
            textoperator_replacement_from_conf_file [label="replacement_from_conf_file"];
            textoperator_delete_lines [label="delete_lines"];
            textoperator_replace_bloc_from_conf_file [label="replace_bloc_from_conf_file"];
            textoperator_function_to_delete [label="function_to_delete"];
            textoperato_delete_bloc_from_conf_file [label="delete_bloc_from_conf_file"];
            textoperator_delete_line_from_pattern [label="delete_line_from_pattern"];
    }

    node [shape=ellipse, style=filled, fillcolor=orange];
    resub [label="re.sub"];


    //
    node [shape=folder, style=filled, fillcolor=red];
    _OMPI [label="<interface_header_dir>/_OMPI"]
    node [shape=folder, style=filled, fillcolor=green];
    etc [label="etc/header"];
    //

    //
    // Functionnal relationship
    //
    Generator_generate_header -> OmpiHeaderGenerator_generate;
    OmpiHeaderGenerator_generate -> HeaderGenerator_generate;
    HeaderGenerator_generate -> HeaderGenerator__generate_app_mpih;
    HeaderGenerator__common_generate_app_mpih -> textoperator_delete_lines;
    HeaderGenerator__common_generate_app_mpih -> textoperator_replacement_from_conf_file;
    HeaderGenerator__common_generate_app_mpih -> textoperator_replace_bloc_from_conf_file;
    HeaderGenerator__common_generate_app_mpih -> textoperator_function_to_delete;
    HeaderGenerator__common_generate_app_mpih -> textoperato_delete_bloc_from_conf_file;
    HeaderGenerator__common_generate_app_mpih -> textoperator_delete_line_from_pattern;
    HeaderGenerator__common_generate_app_mpih -> resub;

    //
    // Data Flow
    //
    HeaderGenerator__generate_app_mpih -> _OMPI;
    etc -> HeaderGenerator__common_generate_app_mpih;
//    etc -> OmpiOmpiHeaderGenerator;
//    OmpiOmpiHeaderGenerator -> INTEL_INTEL;
}


typedef void \(R_MPI_File_errhandler_function\)\(void \*, int \*, ...\);@typedef void (R_MPI_File_errhandler_function)(void*, int *, ...);
int R_MPI_Info_set\( R_MPI_Info, const char \*, const char \* \);@int R_MPI_Info_set( R_MPI_Info, char *, char * );
int R_MPI_Info_delete\( R_MPI_Info , const char \* \);@int R_MPI_Info_delete( R_MPI_Info , char * );
int R_MPI_Info_get\(R_MPI_Info , const char \*, int , char \*, int \*\);@int R_MPI_Info_get(R_MPI_Info , char *, int , char *, int *);
int R_MPI_Win_set_name\(R_MPI_Win, const char \*\);@int R_MPI_Win_set_name(R_MPI_Win, char *);
int R_MPI_Win_detach\(R_MPI_Win, const void \*\);@int R_MPI_Win_detach(R_MPI_Win, void *);
int R_MPI_Get_accumulate\(const void \*, int, R_MPI_Datatype, void \*, int,@int R_MPI_Get_accumulate(void *, int, R_MPI_Datatype, void *, int,
int R_MPI_Fetch_and_op\(const void \*, void \*, R_MPI_Datatype, int, R_MPI_Aint, R_MPI_Op,@int R_MPI_Fetch_and_op(void *, void *, R_MPI_Datatype, int, R_MPI_Aint, R_MPI_Op,
int R_MPI_Compare_and_swap\(const void \*, const void \*, void \*, R_MPI_Datatype, int,@int R_MPI_Compare_and_swap(void *, void *, void *, R_MPI_Datatype, int,
int R_MPI_Rput\(const void \*, int, R_MPI_Datatype, int, R_MPI_Aint, int, R_MPI_Datatype,@int R_MPI_Rput(void *, int, R_MPI_Datatype, int, R_MPI_Aint, int, R_MPI_Datatype,
int R_MPI_Raccumulate\(const void \*, int, R_MPI_Datatype, int, R_MPI_Aint, int,@int R_MPI_Raccumulate(void *, int, R_MPI_Datatype, int, R_MPI_Aint, int,
int R_MPI_Rget_accumulate\(const void \*, int, R_MPI_Datatype, void \*, int,@int R_MPI_Rget_accumulate(void *, int, R_MPI_Datatype, void *, int,
int R_MPI_T_cvar_get_index\(const char \*name, int \*cvar_index\);@int R_MPI_T_cvar_get_index(char *name, int *cvar_index);
int R_MPI_T_cvar_write\(R_MPI_T_cvar_handle handle, const void \*buff\);@int R_MPI_T_cvar_write(R_MPI_T_cvar_handle handle, void *buff);
int R_MPI_T_pvar_get_index\(char \*name, int \*pvar_class, int \*pvar_index\);@int R_MPI_T_pvar_get_index(char *name, int var_class, int *pvar_index);
int R_MPI_Comm_connect\(const char \*, R_MPI_Info , int , R_MPI_Comm , R_MPI_Comm \*\);@int R_MPI_Comm_connect(char *, R_MPI_Info , int , R_MPI_Comm , R_MPI_Comm *);
int R_MPI_Lookup_name\(const char \*, R_MPI_Info , char \*\);@int R_MPI_Lookup_name(char *, R_MPI_Info , char *);
int R_MPI_Reduce_local\(const void \*, void \*, int, R_MPI_Datatype, R_MPI_Op\);@int R_MPI_Reduce_local(void *, void *, int, R_MPI_Datatype, R_MPI_Op);
int R_MPI_Dist_graph_create\(R_MPI_Comm , int , const int \[\],const int \[\], const int \[\],const int \[\],R_MPI_Info , int , R_MPI_Comm \*\);@int R_MPI_Dist_graph_create(R_MPI_Comm , int , int [], int [], int [],int [],R_MPI_Info , int , R_MPI_Comm *);
int R_MPI_Dist_graph_create_adjacent\(R_MPI_Comm ,int , const int \[\],const int \[\],int , const int \[\],const int \[\],R_MPI_Info , int , R_MPI_Comm \*\);@int R_MPI_Dist_graph_create_adjacent(R_MPI_Comm ,int , int [], int [],int , int [], int [],R_MPI_Info , int , R_MPI_Comm *);
^[^\S]{21}const void \*buff\);@                     void *buff);

void wrapper_init_f(void);
void init_f2c(void *);
__attribute__((constructor)) void wrapper_init(void) {
void *lib_handle = dlopen(getenv("WI4MPI_RUN_MPI_C_LIB"), RTLD_NOW | RTLD_GLOBAL);
void *lib_handle_io = dlopen(getenv("WI4MPI_RUN_MPIIO_C_LIB"), RTLD_NOW | RTLD_GLOBAL);
    {% for func in funcs-%} 
#ifdef __{{func['name']}}__GEN__
        LOCAL_{{func['name']}}=dlsym(lib_handle,"{{func['name']}}");
        if ( ! LOCAL_{{func['name']}} && lib_handle_io)
        LOCAL_{{func['name']}}=dlsym(lib_handle_io,"{{func['name']}}");
#endif
    {% endfor-%} 
    {%- for type in types-%} 
        {{type['name']}}_translation_init();
        {%- for const in type["values"]-%} 
             {{type['name']}}_translation_add_const(A_{{const}},R_{{const}});
        {%- endfor -%}
    {%- endfor %} 


#if defined(intel_intel)||defined(intel_ompi)||defined(ompi_intel)||defined(_intel)||defined(_mpc)

  local_mpir_dup_fn = dlsym(lib_handle, "mpir_dup_fn");

#endif
#if defined(intel_intel) || defined(intel_ompi) || defined(ompi_intel) || \
  defined(_intel)

  ptr_mpifcmb5_ = dlsym(lib_handle, "mpifcmb5_");
  ptr_mpifcmb9_ = dlsym(lib_handle, "mpifcmb9_");
  ptr_mpipriv1_ = dlsym(lib_handle, "mpipriv1_");
  ptr_mpipriv2_ = dlsym(lib_handle, "mpipriv2_");
  ptr_mpiprivc_ = dlsym(lib_handle, "mpiprivc_");
#endif
#if defined(ompi_ompi) || defined(_ompi)

  init_global(lib_handle);

#elif defined(ompi_intel) || defined(_intel)

  r_mpi_unweighted = dlsym(lib_handle, "mpi_unweighted");
  r_mpi_weights_empty = dlsym(lib_handle, "mpi_weights_empty");
  mpi_unweighted = dlsym(lib_handle, "mpi_unweighted");
  mpi_weights_empty = dlsym(lib_handle, "mpi_weights_empty");
#endif

  wrapper_init_f();
  init_f2c(lib_handle);
  WI4MPI_errhandler_key = R_MPI_KEYVAL_INVALID;
}

#ifdef TIMEOUT_SUPPORT
__attribute__((constructor)) void wi4mpi_timeout_config(void) {
  char *current_str;
  size_t current_val;
  int current_deb;
  timeout_config_file();
  int default_debug;
  if (current_str = getenv("WI4MPI_DEFAULT_PRINT")) {
    default_debug = strtol(current_str, NULL, 10);
  } else
    default_debug = 0;
    {%- for func in funcs -%} 
  if (current_str = getenv("WI4{{func['name']}}_timeout")) {
    current_val = strtoll(current_str, NULL, 10);
    if (current_val > 0)
      WI4{{func['name']}}_timeout = current_val;
  }
  if (current_str = getenv("WI4{{func['name']}}_debug")) {
    current_deb = strtol(current_str, NULL, 10);
    if (current_deb > 0)
      WI4{{func['name']}}_print = current_deb;
  } else
    WI4{{func['name']}}_print = default_debug;
    {%- endfor -%} 
}
#endif

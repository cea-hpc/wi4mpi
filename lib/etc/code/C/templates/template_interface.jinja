{%-from 'in_functions.jinja' import type_prefix -%}
{% if  conf[func['name']] is not defined or  conf[func['name']]['Application'] is not defined or conf[func['name']]['Application']['C'] is not defined or conf[func['name']]['Application']['C']['generated'] != "False" or conf[func['name']]['Application']['C']['file'] is defined -%}
{%-  set ret_type = mappers[func['ret']['name']]['type']-%} 
{{ ret_type }} {{func['name']}}({%-  for arg in func['args']-%}  {%-  if loop.index > 1-%}  , {%-  endif-%} {%if arg["variadic"]== "True" %} ... {%else %}  {{ mappers[arg['name']]['type'] }} {{ arg["var"] }}  {%endif %}{%-  endfor-%} );
#pragma weak {{func['name']}}=P{{func['name']}}

#ifdef WI4MPI_STATIC

{% for mpilib in mpi_libraries %}

{{ ret_type }} INTERF_2_{{mpilib}}_{{func['name']}}({%-  for arg in func['args']-%}  {%-  if loop.index > 1-%}  , {%-  endif-%} {%if arg["variadic"]== "True" %} ... {%else %} {{ mappers[arg['name']]['type'] }} {{ arg["var"] }}  {%endif %}{%-  endfor-%} );

{% endfor %}

#endif /* WI4MPI_STATIC */

{{ ret_type }} (*INTERFACE_LOCAL_{{func['name']}})({%-  for arg in func['args']-%}  {%-  if loop.index > 1-%}  , {%-  endif-%} {%if arg["variadic"]== "True" %} ... {%else %} {{ mappers[arg['name']]['type'] }} {{ arg["var"] }} {%endif %}{%-  endfor-%} );
{{ ret_type }} P{{func['name']}}({%-  for arg in func['args']-%}  {%-  if loop.index > 1-%}  , {%-  endif-%} {%if arg["variadic"]== "True" %} ... {%else %}{{ mappers[arg['name']]['type'] }} {{ arg["var"] }} {%endif %}{%-  endfor-%} )
{
    return INTERFACE_LOCAL_{{func['name']}}({%-  for arg in func['args']-%} {%- if 'var' in arg -%}  {%-  if loop.index > 1-%}  , {%-  endif-%} {{ arg["var"].split('[')|first }}{%- endif -%}{%- endfor -%});
}
{% endif %}
